
The storage master
------------------

* I store my files at very different locations (remote servers, removable media, NAS,
  etc...)
* These locations have different available storage space and trustworthiness
* Thus, depending on the role and size of each file as well as the location it
  should be stored compressed, encrypted or both.
* Harmony helps me with that in allowing to specify with rules how files
  should be stored in each location.
* Harmony will still be able to realize that an encrypted and/or compressed
  file in one location is the same as an unencrypted/uncompressed file in
  another. For this harmony can track multiple IDs of file content for the
  various encodings and convert between them to obtain a new ID if necessary.
* As harmony does not store my password with the encrypted files (which would
  render the encryption pointless), it uses a public key scheme so it can
  always encrypt files (but only decrypt them with my password)
* I can manually en-/decrypt and/or pack/unpack files in my working
  directories and harmony will realize the change of encoding but also note
  when e.g. the actual content has not actually changed.
* Harmony does the necessary conversions on the fly when transmitting, asking for a password for
  decryption if necessary.
* I can also specifically request that files are only ever transferred to a
  certain location in given encoding (e.g. packed for speed or encrypted for
  end-to-end security).


The MP3 juggler
---------------

* I have my MP3s all over the place, on different machines depending on what i
  need where (which changes from time to time) I try to keep the directory
  structure similar, but here and there names of files or directory are not
  consistent

* With harmony I can create a MP3 repository on each machine and connect them
  such that harmony has a CONSISTENT VIEW of the entirety of the MP3s
  available and where they are
* There are different means to OUTPUT THIS VIEW, e.g. by outputting file
  listing into a file, via a GUI or with dead symlinks (like git annex),
  these are plugins so others may follow
* harmony keeps this consistent by (manual) SYNCING, via filesystem operations
  (e.g. syncing with a mounted smart phone), SSH, IRC (need bouncer?), XMPP.
  Some of these operate point-to-point and can transfer files (e.g. SSH), others can reach
  all repositories at once but might not be suitable for file transfer (XMPP,
  IRC).

  <<EDIT>>:
  The only benefit of point-to-multipoint syncing would be to automatically
  synchronize repositories, however each remote must be considered
  individually anyway, for e.g. history merging. Multicast merely only makes
  sense for non-historied data, e.g. negotiating protocols for the actual
  communication?
  -> NO MULTICAST (for now)


* Repositories have an understanding of how to reach other repositories and
  what repos consist in the conglomerate.
  This meta information gets transferred as part of the synchronization
  process. Repositories might not be reachable from all other repositories by
  the same means or not at all by some. Thus, it is always possible to locally
  specify how to reach each other repository.

  <<EDIT>>:
  We start out with manual configuration of each instance. When that works
  nicely, we'll maybe add a way to give instances an optional location that
  will be synced and provides a default remote entry.

* I can request DOWNLOADING (TRANSFERRING) of a certain file, harmony will
  search the "nearest" location for that (preferring filesystem operations
  over SSH connections)

* Also I can push files to a remote repository

* Harmony is smart about DUPLICATE FILES, so when I have MP3s in my
  repository twice, it can use a file with different name and same content as
  source for the request.

* Harmony allows me to conduct operations such as renaming, moving or DELETING
  files from the repository without having to download them. This works e.g.
  by an editable file list
* Harmony separates cleanly between DELETING a local instance of a file and
  DELETING a file from the repository entirely. It is possible to have harmony make
  sure (by communication) that another instance of a file exists before
  locally deleting it.
* As files are potentially large, harmony keeps them only in the working copy.
  That entails however that a local rm may destroy the last copy of a file.
  Therefore, harmony can change the permissions of files to a read-only state
  so that one has to ask harmony to unlock a file so it becomes deletable.

* I can set up a harmony repo as complete ARCHIVE. As the archive is usually
  better reachable than other repos (e.g. on laptops), other repos push files
  to it, when there are changes. The complete archive mirrors exactly all
  files in the repo.
* Synchronization of metadata and file data are separated, and both triggered
  manually, so i can do stuff on my laptop when offline and sync later.
  Harmony will warn/remind me if operations are pending, e.g., when I have to
  sync my state after changing things, or, more important, when I have to
  upload files

* Harmony separates cleanly between files CONTENT and their METADATA.
  Metadata includes changeable aspects like the file name, permissions and
  content-dependent aspects such as file size and a hash value over the
  contents.
* With a special MP3 plugin it is possible to also identify ID3 tags as meta
<<<<<<< HEAD
  data. This allows to change ID3 ta XXX ...?
=======
  data. This means that these tags are transferred during synchronization and
  can be remotely edited and aid in sorting files remotely


The backupper
-------------

>>>>>>> 132af5cf3aa045253167b7069673e15dd8e33154

